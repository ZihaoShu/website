[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ggplot2:数据分析与图形艺术",
    "section": "",
    "text": "这是Springer出版的“ggplot2:数据分析与图形艺术”第三版的在线版本。\n虽然本书详细介绍了ggplot2的基础知识，但重点使解释ggplot2使用的图形语法的细节。这不是一本手册，不一定能帮助你创建所需的任何特定图形，但它能帮你了解基本理论的细节，让你可以根据自己的需要绘制特定图形。\n\n\n\n\n\n\nNote\n\n\n\n翻译仅供自己学习使用！"
  },
  {
    "objectID": "图层.html",
    "href": "图层.html",
    "title": "3  Introduction",
    "section": "",
    "text": "See Knuth (1984) for additional discussion of literate programming.\n\n\n\n\nKnuth, Donald E. 1984. “Literate Programming.” Comput. J. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "标度.html",
    "href": "标度.html",
    "title": "4  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "语法.html",
    "href": "语法.html",
    "title": "References",
    "section": "",
    "text": "Knuth, Donald E. 1984. “Literate Programming.” Comput.\nJ. 27 (2): 97–111. https://doi.org/10.1093/comjnl/27.2.97."
  },
  {
    "objectID": "开始.html",
    "href": "开始.html",
    "title": "1 引言",
    "section": "",
    "text": "ggplot2是一个用于绘制统计图形（或称为数据图形）的R包。与其他大多数的图形软件包不同，ggplot2由一套图形语法所支持，允许将独立的图形组件组合起来。这一点使得ggplot2功能非常强大。你可以根据实际问题来定制图形，而不是局限于定义好的统计图形。虽然必须学习语法听起来很困难，但实际上ggplot2的学习只需要掌握一些核心准则以及少许特例，尽管可能需要花费一些时间去忘掉其他图形工具中的一些固有概念。\nggplot2可以绘制出很多美观的图形，同时能避免诸多繁琐的细节，例如添加图例等。实际上，ggplot2内置了一系列的预设图形，因此在大部分的情况下你可以快速的绘制出高质量的图形。如果有特殊的格式要求，也可以使用ggplot2的主题系统来进行调整。这样你可以专注于用创建展示数据的图形，而不是花费更多的时间来调整图形的外观。\nggplot2采用了迭代（iteratively）的设计方式，你可以从绘制原始数据的底层开始，然后不断地添加图形注释和统计汇总结果。这种绘图方式与分析问题中的结构化思维是一致的，它能缩短你“所思”与“所见”的距离。ggplot2还可以帮助学生锻炼结构化地分析思维，进而达到专业的水准。\n学习图形语法不仅可以帮助你绘制出熟悉的图形，还可以帮助你绘制出更新、更好的图形。如果没有这一套语法体系，图形的绘制便失去了理论支持，这也就是为什么现有的很多图形软件包只是一系列特例的堆积。例如在base R中，如果你想设计一个新的图形，那么它是由点和线等原始绘图元素构成，因此很难利用现有的图形样式进行组合以生成新的图形部件。在ggplot2中，用于创建新图形的表达式是由高级的图形元素组成的，例如对原始数据以及某些统计变换的展现。这些图形元素可以很方便地与新的数据集以及其他图形进行结合。\n本书通过大量示例代码和图形对ggplot2进行了整体的介绍，同时还解释了ggplot2所基于的语法。与其他成熟的系统一样，即使你不了解ggplot2的底层模型，你也可以用它来完成许多工作。当然你了解的越多，使用ggplot2时会越高效。\n本书将会从零开始介绍ggplot2的基础语法，因此读者不必担心目前对该语法一无所知；你将会学习到如何利用ggplot2来重新绘制那些你已经很熟悉的图形，以及向你展示如何使用语法创建新的图形类型，并最终使你成为可以自己来构建新的图形组件来扩展这一套语法的专家。"
  },
  {
    "objectID": "开始.html#什么是图形语法",
    "href": "开始.html#什么是图形语法",
    "title": "1 引言",
    "section": "1.2 什么是图形语法？",
    "text": "1.2 什么是图形语法？\nWikinson创建了一套用来描述统计图形基本特性的语法规则。该语法回答了“什么是统计图形？”这一问题。ggplot2以Wilkinson的语法为基础，将图层作为主要的考察对象，并对其进行调整以嵌入到R中。简而言之，这套语法告诉我们一张统计图形就是从数据到几何对象（geometric object，缩写为geom，包括点、线、条形等）的图形属性（aesthetic attributes，缩写为aes，包括颜色、形状、大小等）的一个映射。此外图形中还可能包含数据的统计变换（statistical transformation，缩写为stat），最后绘制在某个特定的坐标系（coordinate system，缩写为coord）中。分面（facet，指将绘图窗口划分为若干个子窗口）可以用来生成数据不同子集的图形。一张统计图形就是由上述这些独立的图形部件所组成的。\n随着本书内容的推进，语法格式将会被更加详细的解释。以下是对这些图形部件的首次描述，介绍了贯穿全书的一些术语，并概述了每个图形部件的基本作用。如果你现在还不能无法完全理解，你将有更多机会了解图形部件以及它们如何协同工作的。\n所有的图形都由数据（data）、你想要可视化的信息和一个映射（mapping）组成，映射是对数据变量如何映射到图形属性的描述。有五个映射部件：\n\n图层（layer）是几何对象和统计变换的集合。几何对象（geom）表示你在图中实际看到的内容（包括点、线、条形等）；统计变换（stat）是对数据进行的某种汇总。例如将数据分组计数以创建直方图，或将一个二维的关系用线性模型进行解释。\n标度（scale）是将数据中的取值映射到图形空间。例如用颜色、大小或形状来表示不同的取值。展现标度的常见做法是绘制图例和坐标轴（逆映射），使读者可以从图形中读取原始数据。"
  }
]