---
title: "ggplot2图形语法"
subtitle: "概括ggplot2图形语法，建立主题函数用于直接调用"
title-block-banner: false
author: "舒子豪"
date: today
image: "ggplot2语法框架.png"
categories: [R,ggplot2,tidyverse]
---

# 1 ggplot2图形语法

ggplot2中的gg表示图形语法(grammar of graphic)，这是一个通过"语法"来绘图的图形概念。ggplot2主张模块间的协调与分工，整个ggplot的语法框架如图 1所示，主要包括数据绘图部分与美化细节部分。

![图 1 ggplot2语法框架](ggplot2语法框架.png)

ggplot2的绘图基本语法结构如图 2所示，其中所需的图表输入信息如下所示：

1. ggplot()：底层绘图函数。Data为数据集，主要是数据框(data.frame)格式的数据集；Mappings变量的视觉通道映射，用来表示变量x和y，还可以用来控制颜色(color)、大小(size)或形状(shape)等视觉通道；Stat表示统计变换，与stat_xxx()相对应，默认为"identity"(无数据变换)；Position表示绘图数据系列的位置调整，默认为"identity"(无位置调整)。

2. geom_xxx()|stat_xxx()：几何图层或统计变换，比如常见的`geom_point()`(散点图)、`geom_bar()`(柱形图)、`geom_histogram()`(统计直方图)、`geom_boxplot()`(箱型图)、`geom_line()`(折线图)等。通常使用geom_xxx()函数就可以绘制大部分图表，有时候通过设定stat参数可以先实现统计变换。

可选的图表输入信息包括如下5个部分，主要是实现图表的美化与变换等。

1. scale_xxx()：度量调整，调整具体的度量，包括颜色(color)、大小(size)或形状(shape)等，跟Mappings的映射变量相对应；

2. coord_xxx()：坐标变换，默认为笛卡尔坐标系，还包括极坐标系、地理空间坐标系等；

3. facet_xxx()：分面系统，将某个变量进行分面变换，包括按行、列和网格等形式分面绘图；

4. guides()：图例调整，主要包括连续型和离散型两种类型的图例；

5. theme()：主题设定，主要用于调整图表的细节，包括图表背景颜色、网格线的间隔与颜色等。

![图 2 ggplot2绘图的基本语法结构](ggplot2绘图的基本语法结构.png)

# 2 geom_xxx()与stat_xxx()

# 2.1 geom_xxx()：几何对象函数
R中的`ggplot2`包包含几十种不同的几何对象函数geom_xxx()，以及统计变换函数stat_xxx()。通常主要使用几何对象函数geom_xxx()，只有当绘制图表设计统计变换时，才会使用统计变换函数stat_xxx()，比如绘制带误差线的均值散点图或柱形图等，ggplot2默认使用直角坐标系。

根据函数输入的变量总数与数据类型(连续型或离散型)，可以将大部分函数大致分成3个大类，6个小类，如表 1所示，但是有两类函数没有囊括在此表中。

|变量数|类型|函数|常用图表类型|
|------|------|------|------|
|1|连续型|geom_histogram()、geom_density()、geom_dotplot()、geom_freqpoly()、geom_qq()、geom_area()|统计直方图、<br>核密度估计曲线图|
| |离散型|geom_bar()|柱形图系列|
|2|x-连续型<br>y-连续型|geom_point()、geom_area()、geom_line()、geom_jitter()、geom_smooth()、geom_label()、geom_text()、geom_bin2d()、geom_hex()、geom_density2d()、geom_map()、geom_step()、geom_quantile()、geom_rug()|散点图系列、<br>面积图系列、<br>折线图系列、<br>包括抖动散点图、<br>平滑曲线图、<br>文本、<br>标签、<br>二维统计直方图、<br>二维核密度估计图、<br>地理空间图表|
| |x-离散型<br>y-离散型|geom_boxplot()、geom_violin()、geom_dotplot()、geom_col()|箱型图、<br>小提琴图、<br>点阵图、<br>统计直方图|
| |x-离散型<br>y-离散型|geom_count()|二维统计直方图|
|3|x,y,z-连续型|geom_contour()、geom_raster()、geom_tile()|等高线图、<br>热力图|

: 表 1 ggplot2函数的分类

## 2.2 stat_xxx()：统计变换函数
统计(stat)变换函数在数据被绘制出来之前对数据进行聚合和其他计算。stat_xxx()确定了数据的计算方法。不同方法的计算会产生不同的结果，所以一个stat()函数必须与一个geom()函数对应才能进行数据的计算。

# 3 视觉通道映射
R语言可用作变量的视觉通道映射参数主要包括color/col/colour、fill、size、angle、linetype、shape、vjust和hjust。有些视觉通道调整参数只适应于类别型变量，比如linetype、shape。

1. `color/col/colour、fill和alpha`的属性都是与颜色相关的视觉通道映射参数。其中color/col/colour是指点(point)、线(line)和填充区域(region)**轮廓**的颜色；fill是指定填充区域(region)的颜色；alpha是指定颜色的透明度，数值范围是从0(完全透明)到1(不透明)。

2. `size`是指点(point)的尺寸或线的(line)宽度，默认单位为pt，可以在geom_point()函数绘制的散点图基础上，添加size的映射，从而实现气泡图的绘制。

3. `angle`是指角度，只有部分几何对象有，如geom_text()函数中文本的摆放角度、geom_spoke()函数中短棒的摆放角度。

4. `vjust和hjust`都是与位置调整有关的视觉通道映射参数。其中，vjust是指**垂直**位置微调，在(0, 1)区间的数字或位置字符串：0="buttom", 0.5="middle", 1="top"，区间外的数字微调比例控制不均；hjust是指**水平**位置微调，在(0, 1)区间的数字或位置字符串：0="left", 0.5="center", 1="right"，区间外的数字微调比例控制不均。

5. `linetype`是指定线条的类型，包括白线(0="blank")、实线(1="solid")、短虚线(2="dashed")、
点线(3="dotted")、点横线(4="dotdash")、长虚线(5="longdash")、短长虚线(6="twodash")。

6. `shape`是指点的形状，为[0, 25]区间的26个整数，分别对应方形、圆形、三角形、菱形等26种不同的形状，如图 3所示。只有21~26号的点的形状有填充颜色(fill)的属性，其他都只有轮廓颜色(color)的属性。

![图 3 R中ggplot2包可供选择的形状](R中ggplot2包可供选择的形状.png)

# 4 度量调整
度量用于控制变量映射到视觉对象的具体细节，比如：X轴和Y轴、alpha(透明度)、colour(轮廓色)、fill(填充颜色)、linetype(线形状)、shape(形状)等，它们都有相应的度量函数。

|度量|数值型|类别型|
|---|------|------|
|x：X轴度量<br>y：Y轴度量|scale_x/y_continuous()、<br>scale_x/y_log10()、<br>scale_x/y_sqrt()、<br>scale_x/y_reverse()、<br>scale_x/y_date()、<br>scale_x/y_datetime()、<br>scale_x/y_time()|scale_x/y_discrete()|
|colour：轮廓色度量<br>fill：填充颜色度量|scale_colour/fill_continuous()、<br>scale_fill_distiller()、<br>scale_colour/fill_gradient()、<br>scale_colour/fill_gradient2()、<br>scale_colour/fill_gradientn()|scale_colour/fill_discrete()、<br>scale_colour/fill_brewer()、<br>scale_colour/fill_manual()|
|alpha：透明度度量|scale_alpha_continuous()|scale_alpha_discrete()、<br>scale_alpha_manual()|
|linetype：线形状度量| |scale_linetype_discrete()、<br>scale_linetype_manual()|
|shape：形状度量| |scale_shape()、<br>scale_shape_manual()|
|size：大小度量|scale_size()、<br>scale_size_area()|scale_size_manual()|

: 表 2 ggplot2常见度量调整函数

# 5 图例
R ggplot2的`guide_colorbar()/guide_colourbar()`函数用于调整连续变量的图例；`guide_legend()`函数用于离散变量的图例，也可以用于连续变量。

guides()函数将guide_colorbar和guide_legend两种图例嵌套进去，方便映射与处理，如`guides(fill = guide_colorbar())`，对多个图例共同处理的时候尤为有效。另外，我们也可以在scale_xxx()度量中指定guide类型，guide = "colorbar"或guide = "legend"。

其中，尤为重要的部分是图例位置的设定，R ggplot2 默认是将图例放置在图表的右边("right")，但是我们在最后添加的theme()函数中，用legend.position设定图例的位置。legend.position可以设定为"right"、"left"、"bottom"和"top"。

# 6 主题系统
主题系统包括绘图区背景、网格线、坐标轴线条等图表的细节部分，而图表风格主要是指绘图区背景、网格线、坐标轴线条等的格式设定所展现的效果。ggplot2图表的主题系统的主要对象包括文本(text)、矩形(rect)和线条(line)三大类，对应的函数包括element_text()、element_rect()、element_line()，另外还有 element_blank()表示该对象设置为无，具体如表 3所示。其中，我们使用比较多的系统对象是坐标轴的标签(axis.text.x、axis.text.y)、图例的位置与背景(legend.position和legend.background)。X轴标签(axis.text.x)在绘制极坐标柱形图和径向柱形图时会用于调整X轴标签的旋转角度，Y轴标签(axis.text.y)也会用于时间序列峰峦图的Y轴标签的替换等。

|对象|函数|图形对象整体|绘图区(面板)|坐标轴|图例|分面系统|
|---|---|-------------|----------|------|----|--------|
|text|element_text()参数：family、face、colour、size、hjust、vjust、angle、lineheight|plot.title、plot.subtitle、plot.caption| |axis.title、axis.title.x、axis.title.y、axis.text、axis.text.x、axis.text.y|legend.text、legent.text.align、legend.text.title、legend.text.align|strip.text、strip.text.x、strip.text.y|
|rect|element_rect()参数：colour、size、type|plot.background、plot.sapcing、plot.margin|panel.background、panel.border、panel.spacing| |legend.background、legend.margin、legend.spacing、legend.spacing.x、legend.spacing.y|strip.backgr、ound|
|line|element_line()参数：fill、colour、size、type| |panel.grid.major、panel.grid.minor、panel.grid.major.x、panel.grid.major.x、panel.grid.minor.x、panel.grid.minor.y|axis.line、axis.line.x、axis.line.y、axis.ticks、axis.ticks.x、axis.ticks.y、axis.ticks.length、axis.ticks.margin| | |

: 表 3 主题系统的主要对象

由于ggplot2主题设置的内部函数及参数非常多，可以直接套用模板或是自己建立主题模板。

``` r
# 在使用前请先运行source("theme_szh.r",encoding = "utf-8")将该函数调入

theme_szh <- function(...){
    theme_bw(...) +
    theme(
        text = element_text(family = "serif"),
        rect = element_rect(fill = "white"),
        plot.margin = unit(rep(0.5,4), 'lines'),
        # 绘图区域
        panel.background = element_rect(fill = "transparent", color = "transparent"),
        panel.border = element_rect(fill = "transparent", color = 'black',size = 1.6),
        # 坐标轴
        axis.title = element_text(color = 'black', vjust = 0.1),
        axis.ticks.length = unit(-0.3,"lines"), # 刻度
        axis.title.x = element_text(size = 40, color = "black"),
        axis.title.y = element_text(size = 40, color = "black"),
        axis.text.x = element_text(size = 32, color = "black"),
        axis.text.y = element_text(size = 32, color = "black"),
        axis.ticks = element_line(colour = "grey20"),
        # 图例
        legend.title = element_text(size = 40, color = "black"),
        legend.key = element_rect(fill = "transparent", color = "transparent"),
        legend.text = element_text(color = "black",size = 32),
        # 分面
        strip.text = element_text(size = 40),
        strip.background = element_rect(size = 1)
        )
}
```